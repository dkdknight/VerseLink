{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_BACKEND_URL||'http://localhost:8001';// Create axios instance\nconst api=axios.create({baseURL:\"\".concat(API_BASE_URL,\"/api/v1\"),headers:{'Content-Type':'application/json'}});// Auth service\nexport const authService={// Set authentication token\nsetAuthToken:token=>{if(token){api.defaults.headers.common['Authorization']=\"Bearer \".concat(token);}else{delete api.defaults.headers.common['Authorization'];}},// Clear authentication token\nclearAuthToken:()=>{delete api.defaults.headers.common['Authorization'];},// Get Discord OAuth redirect URL\ngetDiscordAuthUrl:async()=>{try{const response=await api.get('/auth/discord/redirect');return response.data;}catch(error){console.error('Failed to get Discord auth URL:',error);throw error;}},// Handle Discord OAuth callback\ndiscordCallback:async(code,state)=>{try{const response=await api.post('/auth/discord/callback',{code,state});return response.data;}catch(error){console.error('Discord callback failed:',error);throw error;}},// Check authentication status\ncheckAuth:async()=>{try{const response=await api.get('/auth/check');return response.data;}catch(error){console.error('Auth check failed:',error);throw error;}},// Get current user profile\ngetCurrentUser:async()=>{try{const response=await api.get('/auth/me');return response.data;}catch(error){console.error('Failed to get current user:',error);throw error;}},// Logout\nlogout:async()=>{try{const response=await api.post('/auth/logout');return response.data;}catch(error){console.error('Logout failed:',error);throw error;}}};// Export axios instance for other services\nexport{api};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_BACKEND_URL","api","create","baseURL","concat","headers","authService","setAuthToken","token","defaults","common","clearAuthToken","getDiscordAuthUrl","response","get","data","error","console","discordCallback","code","state","post","checkAuth","getCurrentUser","logout"],"sources":["C:/Users/Knight-Server/Desktop/VerseLink-conflict_090925_1049/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api/v1`,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Auth service\nexport const authService = {\n  // Set authentication token\n  setAuthToken: (token) => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  },\n\n  // Clear authentication token\n  clearAuthToken: () => {\n    delete api.defaults.headers.common['Authorization'];\n  },\n\n  // Get Discord OAuth redirect URL\n  getDiscordAuthUrl: async () => {\n    try {\n      const response = await api.get('/auth/discord/redirect');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get Discord auth URL:', error);\n      throw error;\n    }\n  },\n\n  // Handle Discord OAuth callback\n  discordCallback: async (code, state) => {\n    try {\n      const response = await api.post('/auth/discord/callback', { code, state });\n      return response.data;\n    } catch (error) {\n      console.error('Discord callback failed:', error);\n      throw error;\n    }\n  },\n\n  // Check authentication status\n  checkAuth: async () => {\n    try {\n      const response = await api.get('/auth/check');\n      return response.data;\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      throw error;\n    }\n  },\n\n  // Get current user profile\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get current user:', error);\n      throw error;\n    }\n  },\n\n  // Logout\n  logout: async () => {\n    try {\n      const response = await api.post('/auth/logout');\n      return response.data;\n    } catch (error) {\n      console.error('Logout failed:', error);\n      throw error;\n    }\n  }\n};\n\n// Export axios instance for other services\nexport { api };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}