{"ast":null,"code":"import{api}from'./authService';export const chatService={getMessages:async(type,id)=>{const token=localStorage.getItem('auth_token');const encodedId=encodeURIComponent(id);const response=await api.get(\"/chat/\".concat(type,\"/\").concat(encodedId,\"/messages\"),{headers:token?{Authorization:\"Bearer \".concat(token)}:{}});return response.data;},postMessage:async(type,id,content)=>{const token=localStorage.getItem('auth_token');const encodedId=encodeURIComponent(id);const response=await api.post(\"/chat/\".concat(type,\"/\").concat(encodedId,\"/messages\"),{content},{headers:token?{Authorization:\"Bearer \".concat(token)}:{}});return response.data;},connectWebSocket:(type,id,token,onMessage)=>{const httpBase=process.env.REACT_APP_BACKEND_URL||'http://localhost:8001';const base=(process.env.REACT_APP_BACKEND_WS_URL||httpBase).replace(/^http/,'ws');const encodedId=encodeURIComponent(id);const encodedToken=encodeURIComponent(token);const ws=new WebSocket(\"\".concat(base,\"/api/v1/chat/ws/\").concat(type==='events'?'event':'match',\"/\").concat(encodedId,\"?token=\").concat(encodedToken));ws.onmessage=e=>{try{onMessage(JSON.parse(e.data));}catch(_unused){}};ws.onopen=()=>{ws._pingInterval=setInterval(()=>{if(ws.readyState===WebSocket.OPEN){ws.send('ping');}},30000);};ws.onclose=()=>{if(ws._pingInterval)clearInterval(ws._pingInterval);};return ws;}};","map":{"version":3,"names":["api","chatService","getMessages","type","id","token","localStorage","getItem","encodedId","encodeURIComponent","response","get","concat","headers","Authorization","data","postMessage","content","post","connectWebSocket","onMessage","httpBase","process","env","REACT_APP_BACKEND_URL","base","REACT_APP_BACKEND_WS_URL","replace","encodedToken","ws","WebSocket","onmessage","e","JSON","parse","_unused","onopen","_pingInterval","setInterval","readyState","OPEN","send","onclose","clearInterval"],"sources":["C:/Users/Knight-Server/Desktop/VerseLink-conflict_090925_1049/frontend/src/services/chatService.js"],"sourcesContent":["import { api } from './authService';\n\nexport const chatService = {\n  getMessages: async (type, id) => {\n    const token = localStorage.getItem('auth_token');\n    const encodedId = encodeURIComponent(id);\n    const response = await api.get(`/chat/${type}/${encodedId}/messages`, {\n      headers: token ? { Authorization: `Bearer ${token}` } : {},\n    });\n    return response.data;\n  },\n  postMessage: async (type, id, content) => {\n    const token = localStorage.getItem('auth_token');\n    const encodedId = encodeURIComponent(id);\n    const response = await api.post(\n      `/chat/${type}/${encodedId}/messages`,\n      { content },\n      {\n        headers: token ? { Authorization: `Bearer ${token}` } : {},\n      }\n    );\n    return response.data;\n  },\n  connectWebSocket: (type, id, token, onMessage) => {\n    const httpBase = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n    const base = (process.env.REACT_APP_BACKEND_WS_URL || httpBase).replace(/^http/, 'ws');\n    const encodedId = encodeURIComponent(id);\n    const encodedToken = encodeURIComponent(token);\n    const ws = new WebSocket(\n      `${base}/api/v1/chat/ws/${type === 'events' ? 'event' : 'match'}/${encodedId}?token=${encodedToken}`\n    );\n    ws.onmessage = (e) => {\n      try {\n        onMessage(JSON.parse(e.data));\n      } catch {}\n    };\n    ws.onopen = () => {\n      ws._pingInterval = setInterval(() => {\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.send('ping');\n        }\n      }, 30000);\n    };\n    ws.onclose = () => {\n      if (ws._pingInterval) clearInterval(ws._pingInterval);\n    };\n    return ws;\n  },\n};"],"mappings":"AAAA,OAASA,GAAG,KAAQ,eAAe,CAEnC,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzBC,WAAW,CAAE,KAAAA,CAAOC,IAAI,CAAEC,EAAE,GAAK,CAC/B,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAChD,KAAM,CAAAC,SAAS,CAAGC,kBAAkB,CAACL,EAAE,CAAC,CACxC,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAV,GAAG,CAACW,GAAG,UAAAC,MAAA,CAAUT,IAAI,MAAAS,MAAA,CAAIJ,SAAS,cAAa,CACpEK,OAAO,CAAER,KAAK,CAAG,CAAES,aAAa,WAAAF,MAAA,CAAYP,KAAK,CAAG,CAAC,CAAG,CAAC,CAC3D,CAAC,CAAC,CACF,MAAO,CAAAK,QAAQ,CAACK,IAAI,CACtB,CAAC,CACDC,WAAW,CAAE,KAAAA,CAAOb,IAAI,CAAEC,EAAE,CAAEa,OAAO,GAAK,CACxC,KAAM,CAAAZ,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAChD,KAAM,CAAAC,SAAS,CAAGC,kBAAkB,CAACL,EAAE,CAAC,CACxC,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAAV,GAAG,CAACkB,IAAI,UAAAN,MAAA,CACpBT,IAAI,MAAAS,MAAA,CAAIJ,SAAS,cAC1B,CAAES,OAAQ,CAAC,CACX,CACEJ,OAAO,CAAER,KAAK,CAAG,CAAES,aAAa,WAAAF,MAAA,CAAYP,KAAK,CAAG,CAAC,CAAG,CAAC,CAC3D,CACF,CAAC,CACD,MAAO,CAAAK,QAAQ,CAACK,IAAI,CACtB,CAAC,CACDI,gBAAgB,CAAEA,CAAChB,IAAI,CAAEC,EAAE,CAAEC,KAAK,CAAEe,SAAS,GAAK,CAChD,KAAM,CAAAC,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,EAAI,uBAAuB,CAC7E,KAAM,CAAAC,IAAI,CAAG,CAACH,OAAO,CAACC,GAAG,CAACG,wBAAwB,EAAIL,QAAQ,EAAEM,OAAO,CAAC,OAAO,CAAE,IAAI,CAAC,CACtF,KAAM,CAAAnB,SAAS,CAAGC,kBAAkB,CAACL,EAAE,CAAC,CACxC,KAAM,CAAAwB,YAAY,CAAGnB,kBAAkB,CAACJ,KAAK,CAAC,CAC9C,KAAM,CAAAwB,EAAE,CAAG,GAAI,CAAAC,SAAS,IAAAlB,MAAA,CACnBa,IAAI,qBAAAb,MAAA,CAAmBT,IAAI,GAAK,QAAQ,CAAG,OAAO,CAAG,OAAO,MAAAS,MAAA,CAAIJ,SAAS,YAAAI,MAAA,CAAUgB,YAAY,CACpG,CAAC,CACDC,EAAE,CAACE,SAAS,CAAIC,CAAC,EAAK,CACpB,GAAI,CACFZ,SAAS,CAACa,IAAI,CAACC,KAAK,CAACF,CAAC,CAACjB,IAAI,CAAC,CAAC,CAC/B,CAAE,MAAAoB,OAAA,CAAM,CAAC,CACX,CAAC,CACDN,EAAE,CAACO,MAAM,CAAG,IAAM,CAChBP,EAAE,CAACQ,aAAa,CAAGC,WAAW,CAAC,IAAM,CACnC,GAAIT,EAAE,CAACU,UAAU,GAAKT,SAAS,CAACU,IAAI,CAAE,CACpCX,EAAE,CAACY,IAAI,CAAC,MAAM,CAAC,CACjB,CACF,CAAC,CAAE,KAAK,CAAC,CACX,CAAC,CACDZ,EAAE,CAACa,OAAO,CAAG,IAAM,CACjB,GAAIb,EAAE,CAACQ,aAAa,CAAEM,aAAa,CAACd,EAAE,CAACQ,aAAa,CAAC,CACvD,CAAC,CACD,MAAO,CAAAR,EAAE,CACX,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}