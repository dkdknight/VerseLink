{"ast":null,"code":"import { api } from './authService';\nexport const userService = {\n  // Get current user profile\n  getProfile: async () => {\n    try {\n      const response = await api.get('/users/me');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get user profile:', error);\n      throw error;\n    }\n  },\n  // Update current user profile\n  updateProfile: async profileData => {\n    try {\n      const response = await api.patch('/users/me', profileData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to update profile:', error);\n      throw error;\n    }\n  },\n  // Get user by ID\n  getUserById: async userId => {\n    try {\n      const response = await api.get(`/users/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get user:', error);\n      throw error;\n    }\n  },\n  // Search users\n  searchUsers: async (query, limit = 20, skip = 0) => {\n    try {\n      const response = await api.get('/users/', {\n        params: {\n          query,\n          limit,\n          skip\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to search users:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["api","userService","getProfile","response","get","data","error","console","updateProfile","profileData","patch","getUserById","userId","searchUsers","query","limit","skip","params"],"sources":["C:/Users/Knight-Server/Desktop/VerseLink-main/frontend/src/services/userService.js"],"sourcesContent":["import { api } from './authService';\n\nexport const userService = {\n  // Get current user profile\n  getProfile: async () => {\n    try {\n      const response = await api.get('/users/me');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get user profile:', error);\n      throw error;\n    }\n  },\n\n  // Update current user profile\n  updateProfile: async (profileData) => {\n    try {\n      const response = await api.patch('/users/me', profileData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to update profile:', error);\n      throw error;\n    }\n  },\n\n  // Get user by ID\n  getUserById: async (userId) => {\n    try {\n      const response = await api.get(`/users/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get user:', error);\n      throw error;\n    }\n  },\n\n  // Search users\n  searchUsers: async (query, limit = 20, skip = 0) => {\n    try {\n      const response = await api.get('/users/', {\n        params: { query, limit, skip }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to search users:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"AAAA,SAASA,GAAG,QAAQ,eAAe;AAEnC,OAAO,MAAMC,WAAW,GAAG;EACzB;EACAC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,WAAW,CAAC;MAC3C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,aAAa,EAAE,MAAOC,WAAW,IAAK;IACpC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACU,KAAK,CAAC,WAAW,EAAED,WAAW,CAAC;MAC1D,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAK,WAAW,EAAE,MAAOC,MAAM,IAAK;IAC7B,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,UAAUQ,MAAM,EAAE,CAAC;MAClD,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAO,WAAW,EAAE,MAAAA,CAAOC,KAAK,EAAEC,KAAK,GAAG,EAAE,EAAEC,IAAI,GAAG,CAAC,KAAK;IAClD,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,SAAS,EAAE;QACxCa,MAAM,EAAE;UAAEH,KAAK;UAAEC,KAAK;UAAEC;QAAK;MAC/B,CAAC,CAAC;MACF,OAAOb,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}