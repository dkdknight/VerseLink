{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api/v1`,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Auth service\nexport const authService = {\n  // Set authentication token\n  setAuthToken: token => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  },\n  // Clear authentication token\n  clearAuthToken: () => {\n    delete api.defaults.headers.common['Authorization'];\n  },\n  // Get Discord OAuth redirect URL\n  getDiscordAuthUrl: async () => {\n    try {\n      const response = await api.get('/auth/discord/redirect');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get Discord auth URL:', error);\n      throw error;\n    }\n  },\n  // Handle Discord OAuth callback\n  discordCallback: async (code, state) => {\n    try {\n      const response = await api.post('/auth/discord/callback', {\n        code,\n        state\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Discord callback failed:', error);\n      throw error;\n    }\n  },\n  // Check authentication status\n  checkAuth: async () => {\n    try {\n      const response = await api.get('/auth/check');\n      return response.data;\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      throw error;\n    }\n  },\n  // Get current user profile\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get current user:', error);\n      throw error;\n    }\n  },\n  // Logout\n  logout: async () => {\n    try {\n      const response = await api.post('/auth/logout');\n      return response.data;\n    } catch (error) {\n      console.error('Logout failed:', error);\n      throw error;\n    }\n  }\n};\n\n// Export axios instance for other services\nexport { api };","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_BACKEND_URL","api","create","baseURL","headers","authService","setAuthToken","token","defaults","common","clearAuthToken","getDiscordAuthUrl","response","get","data","error","console","discordCallback","code","state","post","checkAuth","getCurrentUser","logout"],"sources":["C:/Users/Knight-Server/Desktop/VerseLink-main/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: `${API_BASE_URL}/api/v1`,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Auth service\nexport const authService = {\n  // Set authentication token\n  setAuthToken: (token) => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  },\n\n  // Clear authentication token\n  clearAuthToken: () => {\n    delete api.defaults.headers.common['Authorization'];\n  },\n\n  // Get Discord OAuth redirect URL\n  getDiscordAuthUrl: async () => {\n    try {\n      const response = await api.get('/auth/discord/redirect');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get Discord auth URL:', error);\n      throw error;\n    }\n  },\n\n  // Handle Discord OAuth callback\n  discordCallback: async (code, state) => {\n    try {\n      const response = await api.post('/auth/discord/callback', { code, state });\n      return response.data;\n    } catch (error) {\n      console.error('Discord callback failed:', error);\n      throw error;\n    }\n  },\n\n  // Check authentication status\n  checkAuth: async () => {\n    try {\n      const response = await api.get('/auth/check');\n      return response.data;\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      throw error;\n    }\n  },\n\n  // Get current user profile\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get current user:', error);\n      throw error;\n    }\n  },\n\n  // Logout\n  logout: async () => {\n    try {\n      const response = await api.post('/auth/logout');\n      return response.data;\n    } catch (error) {\n      console.error('Logout failed:', error);\n      throw error;\n    }\n  }\n};\n\n// Export axios instance for other services\nexport { api };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,uBAAuB;;AAEjF;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAE,GAAGN,YAAY,SAAS;EACjCO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG;EACzB;EACAC,YAAY,EAAGC,KAAK,IAAK;IACvB,IAAIA,KAAK,EAAE;MACTN,GAAG,CAACO,QAAQ,CAACJ,OAAO,CAACK,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUF,KAAK,EAAE;IAClE,CAAC,MAAM;MACL,OAAON,GAAG,CAACO,QAAQ,CAACJ,OAAO,CAACK,MAAM,CAAC,eAAe,CAAC;IACrD;EACF,CAAC;EAED;EACAC,cAAc,EAAEA,CAAA,KAAM;IACpB,OAAOT,GAAG,CAACO,QAAQ,CAACJ,OAAO,CAACK,MAAM,CAAC,eAAe,CAAC;EACrD,CAAC;EAED;EACAE,iBAAiB,EAAE,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,wBAAwB,CAAC;MACxD,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,eAAe,EAAE,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;IACtC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMX,GAAG,CAACmB,IAAI,CAAC,wBAAwB,EAAE;QAAEF,IAAI;QAAEC;MAAM,CAAC,CAAC;MAC1E,OAAOP,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAM,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,aAAa,CAAC;MAC7C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAO,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,UAAU,CAAC;MAC1C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAQ,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMX,GAAG,CAACmB,IAAI,CAAC,cAAc,CAAC;MAC/C,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,MAAMA,KAAK;IACb;EACF;AACF,CAAC;;AAED;AACA,SAASd,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}