{"ast":null,"code":"import{api}from'./authService';export const tournamentService={// List tournaments with filters\nlistTournaments:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await api.get('/tournaments/',{params});return response.data;}catch(error){console.error('Failed to list tournaments:',error);throw error;}},// Get tournament details\ngetTournament:async tournamentId=>{try{const response=await api.get(\"/tournaments/\".concat(tournamentId));return response.data;}catch(error){console.error('Failed to get tournament:',error);throw error;}},// Create tournament for organization\ncreateTournament:async(orgId,tournamentData)=>{try{const response=await api.post(\"/orgs/\".concat(orgId,\"/tournaments\"),tournamentData);return response.data;}catch(error){console.error('Failed to create tournament:',error);throw error;}},// Create team for tournament\ncreateTeam:async(tournamentId,teamData)=>{try{const response=await api.post(\"/tournaments/\".concat(tournamentId,\"/teams\"),teamData);return response.data;}catch(error){console.error('Failed to create team:',error);throw error;}},// Add member to team\naddTeamMember:async(tournamentId,teamId,userId)=>{try{const formData=new FormData();formData.append('user_id',userId);const response=await api.post(\"/tournaments/\".concat(tournamentId,\"/teams/\").concat(teamId,\"/members\"),formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){console.error('Failed to add team member:',error);throw error;}},// Remove member from team\nremoveTeamMember:async(tournamentId,teamId,userId)=>{try{const response=await api.delete(\"/tournaments/\".concat(tournamentId,\"/teams/\").concat(teamId,\"/members/\").concat(userId));return response.data;}catch(error){console.error('Failed to remove team member:',error);throw error;}},// Report match score\nreportMatchScore:async(matchId,scoreData)=>{try{const response=await api.post(\"/tournaments/matches/\".concat(matchId,\"/report\"),scoreData);return response.data;}catch(error){console.error('Failed to report match score:',error);throw error;}},// Verify match result (referee only)\nverifyMatchResult:async matchId=>{try{const response=await api.post(\"/tournaments/matches/\".concat(matchId,\"/verify\"));return response.data;}catch(error){console.error('Failed to verify match result:',error);throw error;}},// Upload match attachment\nuploadMatchAttachment:async function(matchId,file){let description=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';try{const formData=new FormData();formData.append('file',file);if(description){formData.append('description',description);}const response=await api.post(\"/tournaments/matches/\".concat(matchId,\"/attachments\"),formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){console.error('Failed to upload match attachment:',error);throw error;}},// Schedule a match\nscheduleMatch:async(matchId,scheduledAt)=>{try{const response=await api.post(\"/tournaments/matches/\".concat(matchId,\"/schedule\"),{scheduled_at:scheduledAt});return response.data;}catch(error){console.error('Failed to schedule match:',error);throw error;}},// Delete attachment\ndeleteAttachment:async attachmentId=>{try{const response=await api.delete(\"/tournaments/attachments/\".concat(attachmentId));return response.data;}catch(error){console.error('Failed to delete attachment:',error);throw error;}},// Download attachment\ndownloadAttachment:attachmentId=>{// Return the download URL\nreturn\"\".concat(api.defaults.baseURL,\"/tournaments/attachments/\").concat(attachmentId,\"/download\");}};","map":{"version":3,"names":["api","tournamentService","listTournaments","params","arguments","length","undefined","response","get","data","error","console","getTournament","tournamentId","concat","createTournament","orgId","tournamentData","post","createTeam","teamData","addTeamMember","teamId","userId","formData","FormData","append","headers","removeTeamMember","delete","reportMatchScore","matchId","scoreData","verifyMatchResult","uploadMatchAttachment","file","description","scheduleMatch","scheduledAt","scheduled_at","deleteAttachment","attachmentId","downloadAttachment","defaults","baseURL"],"sources":["C:/Users/Knight-Server/Desktop/VerseLink-main/frontend/src/services/tournamentService.js"],"sourcesContent":["import { api } from './authService';\n\nexport const tournamentService = {\n  // List tournaments with filters\n  listTournaments: async (params = {}) => {\n    try {\n      const response = await api.get('/tournaments/', { params });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to list tournaments:', error);\n      throw error;\n    }\n  },\n\n  // Get tournament details\n  getTournament: async (tournamentId) => {\n    try {\n      const response = await api.get(`/tournaments/${tournamentId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get tournament:', error);\n      throw error;\n    }\n  },\n\n  // Create tournament for organization\n  createTournament: async (orgId, tournamentData) => {\n    try {\n      const response = await api.post(`/orgs/${orgId}/tournaments`, tournamentData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to create tournament:', error);\n      throw error;\n    }\n  },\n\n  // Create team for tournament\n  createTeam: async (tournamentId, teamData) => {\n    try {\n      const response = await api.post(`/tournaments/${tournamentId}/teams`, teamData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to create team:', error);\n      throw error;\n    }\n  },\n\n  // Add member to team\n  addTeamMember: async (tournamentId, teamId, userId) => {\n    try {\n      const formData = new FormData();\n      formData.append('user_id', userId);\n      \n      const response = await api.post(`/tournaments/${tournamentId}/teams/${teamId}/members`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to add team member:', error);\n      throw error;\n    }\n  },\n\n  // Remove member from team\n  removeTeamMember: async (tournamentId, teamId, userId) => {\n    try {\n      const response = await api.delete(`/tournaments/${tournamentId}/teams/${teamId}/members/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to remove team member:', error);\n      throw error;\n    }\n  },\n\n  // Report match score\n  reportMatchScore: async (matchId, scoreData) => {\n    try {\n      const response = await api.post(`/tournaments/matches/${matchId}/report`, scoreData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to report match score:', error);\n      throw error;\n    }\n  },\n\n  // Verify match result (referee only)\n  verifyMatchResult: async (matchId) => {\n    try {\n      const response = await api.post(`/tournaments/matches/${matchId}/verify`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to verify match result:', error);\n      throw error;\n    }\n  },\n\n  // Upload match attachment\n  uploadMatchAttachment: async (matchId, file, description = '') => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      if (description) {\n        formData.append('description', description);\n      }\n      \n      const response = await api.post(`/tournaments/matches/${matchId}/attachments`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to upload match attachment:', error);\n      throw error;\n    }\n  },\n\n  // Schedule a match\n  scheduleMatch: async (matchId, scheduledAt) => {\n    try {\n      const response = await api.post(`/tournaments/matches/${matchId}/schedule`, {\n        scheduled_at: scheduledAt,\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to schedule match:', error);\n      throw error;\n    }\n  },\n\n  // Delete attachment\n  deleteAttachment: async (attachmentId) => {\n    try {\n      const response = await api.delete(`/tournaments/attachments/${attachmentId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to delete attachment:', error);\n      throw error;\n    }\n  },\n\n  // Download attachment\n  downloadAttachment: (attachmentId) => {\n    // Return the download URL\n    return `${api.defaults.baseURL}/tournaments/attachments/${attachmentId}/download`;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}