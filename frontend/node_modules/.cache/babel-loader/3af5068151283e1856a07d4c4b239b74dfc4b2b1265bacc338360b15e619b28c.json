{"ast":null,"code":"import{api}from'./authService';export const organizationService={// Create organization\ncreateOrganization:async orgData=>{try{const response=await api.post('/orgs/',orgData);return response.data;}catch(error){console.error('Failed to create organization:',error);throw error;}},// List organizations\nlistOrganizations:async function(){let query=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';let visibility=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:20;let skip=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;try{const params={limit,skip};if(query)params.query=query;if(visibility)params.visibility=visibility;const response=await api.get('/orgs/',{params});return response.data;}catch(error){console.error('Failed to list organizations:',error);throw error;}},// Get organization by ID\ngetOrganization:async orgId=>{try{const response=await api.get(\"/orgs/\".concat(orgId));return response.data;}catch(error){console.error('Failed to get organization:',error);throw error;}},// Update organization\nupdateOrganization:async(orgId,updateData)=>{try{const response=await api.patch(\"/orgs/\".concat(orgId),updateData);return response.data;}catch(error){console.error('Failed to update organization:',error);throw error;}},// Get organization members\ngetMembers:async orgId=>{try{const response=await api.get(\"/orgs/\".concat(orgId,\"/members\"));return response.data;}catch(error){console.error('Failed to get organization members:',error);throw error;}},// Join organization\njoinOrganization:async orgId=>{try{const response=await api.post(\"/orgs/\".concat(orgId,\"/members\"));return response.data;}catch(error){console.error('Failed to join organization:',error);throw error;}},// Leave organization\nleaveOrganization:async(orgId,userId)=>{try{const response=await api.delete(\"/orgs/\".concat(orgId,\"/members/\").concat(userId));return response.data;}catch(error){console.error('Failed to leave organization:',error);throw error;}},// Update member role\nupdateMemberRole:async(orgId,userId,role)=>{try{const response=await api.patch(\"/orgs/\".concat(orgId,\"/members/\").concat(userId,\"/role\"),{role});return response.data;}catch(error){console.error('Failed to update member role:',error);throw error;}},// Remove member\nremoveMember:async(orgId,userId)=>{try{const response=await api.delete(\"/orgs/\".concat(orgId,\"/members/\").concat(userId));return response.data;}catch(error){console.error('Failed to remove member:',error);throw error;}},// Join request methods\ncreateJoinRequest:async function(orgId){let message=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';try{const response=await api.post(\"/orgs/\".concat(orgId,\"/join-requests\"),{message});return response.data;}catch(error){console.error('Failed to create join request:',error);throw error;}},getJoinRequests:async orgId=>{try{const response=await api.get(\"/orgs/\".concat(orgId,\"/join-requests\"));return response.data;}catch(error){console.error('Failed to get join requests:',error);throw error;}},processJoinRequest:async(orgId,requestId,status)=>{try{const response=await api.patch(\"/orgs/\".concat(orgId,\"/join-requests/\").concat(requestId),{status});return response.data;}catch(error){console.error('Failed to process join request:',error);throw error;}},// Media upload methods\nuploadLogo:async(orgId,file)=>{try{const formData=new FormData();formData.append('file',file);const response=await api.post(\"/orgs/\".concat(orgId,\"/media/logo\"),formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){console.error('Failed to upload logo:',error);throw error;}},uploadBanner:async(orgId,file)=>{try{const formData=new FormData();formData.append('file',file);const response=await api.post(\"/orgs/\".concat(orgId,\"/media/banner\"),formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;}catch(error){console.error('Failed to upload banner:',error);throw error;}},// Ownership and deletion\ntransferOwnership:async(orgId,newOwnerId)=>{try{const response=await api.post(\"/orgs/\".concat(orgId,\"/transfer-ownership\"),{new_owner_id:newOwnerId,confirmation:true});return response.data;}catch(error){console.error('Failed to transfer ownership:',error);throw error;}},deleteOrganization:async orgId=>{try{const response=await api.delete(\"/orgs/\".concat(orgId,\"?confirmation=true\"));return response.data;}catch(error){console.error('Failed to delete organization:',error);throw error;}}};","map":{"version":3,"names":["api","organizationService","createOrganization","orgData","response","post","data","error","console","listOrganizations","query","arguments","length","undefined","visibility","limit","skip","params","get","getOrganization","orgId","concat","updateOrganization","updateData","patch","getMembers","joinOrganization","leaveOrganization","userId","delete","updateMemberRole","role","removeMember","createJoinRequest","message","getJoinRequests","processJoinRequest","requestId","status","uploadLogo","file","formData","FormData","append","headers","uploadBanner","transferOwnership","newOwnerId","new_owner_id","confirmation","deleteOrganization"],"sources":["C:/Users/Knight-Server/Desktop/VerseLink-conflict_090925_1049/frontend/src/services/organizationService.js"],"sourcesContent":["import { api } from './authService';\n\nexport const organizationService = {\n  // Create organization\n  createOrganization: async (orgData) => {\n    try {\n      const response = await api.post('/orgs/', orgData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to create organization:', error);\n      throw error;\n    }\n  },\n\n  // List organizations\n  listOrganizations: async (query = '', visibility = null, limit = 20, skip = 0) => {\n    try {\n      const params = { limit, skip };\n      if (query) params.query = query;\n      if (visibility) params.visibility = visibility;\n      \n      const response = await api.get('/orgs/', { params });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to list organizations:', error);\n      throw error;\n    }\n  },\n\n  // Get organization by ID\n  getOrganization: async (orgId) => {\n    try {\n      const response = await api.get(`/orgs/${orgId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get organization:', error);\n      throw error;\n    }\n  },\n\n  // Update organization\n  updateOrganization: async (orgId, updateData) => {\n    try {\n      const response = await api.patch(`/orgs/${orgId}`, updateData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to update organization:', error);\n      throw error;\n    }\n  },\n\n  // Get organization members\n  getMembers: async (orgId) => {\n    try {\n      const response = await api.get(`/orgs/${orgId}/members`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get organization members:', error);\n      throw error;\n    }\n  },\n\n  // Join organization\n  joinOrganization: async (orgId) => {\n    try {\n      const response = await api.post(`/orgs/${orgId}/members`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to join organization:', error);\n      throw error;\n    }\n  },\n\n  // Leave organization\n  leaveOrganization: async (orgId, userId) => {\n    try {\n      const response = await api.delete(`/orgs/${orgId}/members/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to leave organization:', error);\n      throw error;\n    }\n  },\n\n  // Update member role\n  updateMemberRole: async (orgId, userId, role) => {\n    try {\n      const response = await api.patch(`/orgs/${orgId}/members/${userId}/role`, { role });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to update member role:', error);\n      throw error;\n    }\n  },\n\n  // Remove member\n  removeMember: async (orgId, userId) => {\n    try {\n      const response = await api.delete(`/orgs/${orgId}/members/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to remove member:', error);\n      throw error;\n    }\n  },\n\n  // Join request methods\n  createJoinRequest: async (orgId, message = '') => {\n    try {\n      const response = await api.post(`/orgs/${orgId}/join-requests`, { message });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to create join request:', error);\n      throw error;\n    }\n  },\n\n  getJoinRequests: async (orgId) => {\n    try {\n      const response = await api.get(`/orgs/${orgId}/join-requests`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get join requests:', error);\n      throw error;\n    }\n  },\n\n  processJoinRequest: async (orgId, requestId, status) => {\n    try {\n      const response = await api.patch(`/orgs/${orgId}/join-requests/${requestId}`, { status });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to process join request:', error);\n      throw error;\n    }\n  },\n\n  // Media upload methods\n  uploadLogo: async (orgId, file) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await api.post(`/orgs/${orgId}/media/logo`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to upload logo:', error);\n      throw error;\n    }\n  },\n\n  uploadBanner: async (orgId, file) => {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await api.post(`/orgs/${orgId}/media/banner`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to upload banner:', error);\n      throw error;\n    }\n  },\n\n  // Ownership and deletion\n  transferOwnership: async (orgId, newOwnerId) => {\n    try {\n      const response = await api.post(`/orgs/${orgId}/transfer-ownership`, {\n        new_owner_id: newOwnerId,\n        confirmation: true\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to transfer ownership:', error);\n      throw error;\n    }\n  },\n\n  deleteOrganization: async (orgId) => {\n    try {\n      const response = await api.delete(`/orgs/${orgId}?confirmation=true`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to delete organization:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}