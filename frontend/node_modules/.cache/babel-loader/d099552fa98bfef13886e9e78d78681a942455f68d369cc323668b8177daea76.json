{"ast":null,"code":"import React,{useState,useEffect,createContext,useContext}from'react';import{BrowserRouter as Router,Routes,Route,Navigate,useNavigate}from'react-router-dom';import{Toaster}from'react-hot-toast';import'./App.css';// Import components\nimport Navbar from'./components/Navbar';import HomePage from'./pages/HomePage';import LoginPage from'./pages/LoginPage';import ProfilePage from'./pages/ProfilePage';import OrganizationsPage from'./pages/OrganizationsPage';import OrganizationDetailPage from'./pages/OrganizationDetailPage';import CreateOrganizationPage from'./pages/CreateOrganizationPage';import CreateEventPage from'./pages/CreateEventPage';import EditEventPage from'./pages/EditEventPage';import EventsPage from'./pages/EventsPage';import EventDetailPage from'./pages/EventDetailPage';import TournamentsPage from'./pages/TournamentsPage';import TournamentDetailPage from'./pages/TournamentDetailPage';import NotificationsPage from'./pages/NotificationsPage';import NotificationPreferencesPage from'./pages/NotificationPreferencesPage';import ModerationDashboardPage from'./pages/ModerationDashboardPage';import DiscordIntegrationPage from'./pages/DiscordIntegrationPage';import DiscordCallbackPage from'./pages/DiscordCallbackPage';import AdminSetupPage from'./pages/AdminSetupPage';// Import services\nimport{authService}from'./services/authService';import{userService}from'./services/userService';// Auth Context\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};// Auth Provider Component\nconst AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[isAuthenticated,setIsAuthenticated]=useState(false);const navigate=useNavigate();useEffect(()=>{checkAuthStatus();},[]);const checkAuthStatus=async()=>{try{setLoading(true);const token=localStorage.getItem('auth_token');if(token){// Set token in axios defaults\nauthService.setAuthToken(token);// Verify token and get user\nconst userData=await authService.checkAuth();setUser(userData.user);setIsAuthenticated(true);}}catch(error){console.error('Auth check failed:',error);// Clear invalid token\nlocalStorage.removeItem('auth_token');authService.clearAuthToken();}finally{setLoading(false);}};const login=async(code,state)=>{try{const response=await authService.discordCallback(code,state);// Store token\nlocalStorage.setItem('auth_token',response.access_token);authService.setAuthToken(response.access_token);// Set user state\nsetUser(response.user);setIsAuthenticated(true);return response;}catch(error){console.error('Login failed:',error);throw error;}};const logout=async()=>{try{// Call backend logout endpoint\nawait authService.logout();}catch(error){console.error('Logout API call failed:',error);// Continue with client-side logout even if API fails\n}finally{// Always clear client-side auth state\nlocalStorage.removeItem('auth_token');authService.clearAuthToken();setUser(null);setIsAuthenticated(false);// Optional: redirect to home page\nnavigate('/');}};const updateProfile=async profileData=>{try{const updatedUser=await userService.updateProfile(profileData);setUser(updatedUser);return updatedUser;}catch(error){console.error('Profile update failed:',error);throw error;}};const value={user,isAuthenticated,loading,login,logout,updateProfile,checkAuthStatus};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Protected Route Component\nconst ProtectedRoute=_ref2=>{let{children}=_ref2;const{isAuthenticated,loading}=useAuth();if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-dark-950 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner w-12 h-12\"})});}return isAuthenticated?children:/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});};// Main App Component\nfunction App(){return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-dark-950\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"star-field fixed inset-0 pointer-events-none\"}),/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"main\",{className:\"relative z-10\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LoginPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/auth/discord/callback\",element:/*#__PURE__*/_jsx(DiscordCallbackPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/organizations\",element:/*#__PURE__*/_jsx(OrganizationsPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/organizations/create\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(CreateOrganizationPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/organizations/:id\",element:/*#__PURE__*/_jsx(OrganizationDetailPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/organizations/:id/events/new\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(CreateEventPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/events\",element:/*#__PURE__*/_jsx(EventsPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/events/:id\",element:/*#__PURE__*/_jsx(EventDetailPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/events/:id/edit\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(EditEventPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/tournaments\",element:/*#__PURE__*/_jsx(TournamentsPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/tournaments/:id\",element:/*#__PURE__*/_jsx(TournamentDetailPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ProfilePage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/notifications\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(NotificationsPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/notifications/preferences\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(NotificationPreferencesPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/admin/setup\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(AdminSetupPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/admin/moderation\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ModerationDashboardPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"/discord\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(DiscordIntegrationPage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]})}),/*#__PURE__*/_jsx(Toaster,{position:\"top-right\",toastOptions:{duration:4000,style:{background:'#1e293b',color:'#f1f5f9',border:'1px solid #475569'},success:{iconTheme:{primary:'#22c55e',secondary:'#f1f5f9'}},error:{iconTheme:{primary:'#ef4444',secondary:'#f1f5f9'}}}})]})})});}export{AuthProvider};export default App;","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","Toaster","Navbar","HomePage","LoginPage","ProfilePage","OrganizationsPage","OrganizationDetailPage","CreateOrganizationPage","CreateEventPage","EditEventPage","EventsPage","EventDetailPage","TournamentsPage","TournamentDetailPage","NotificationsPage","NotificationPreferencesPage","ModerationDashboardPage","DiscordIntegrationPage","DiscordCallbackPage","AdminSetupPage","authService","userService","jsx","_jsx","jsxs","_jsxs","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","navigate","checkAuthStatus","token","localStorage","getItem","setAuthToken","userData","checkAuth","error","console","removeItem","clearAuthToken","login","code","state","response","discordCallback","setItem","access_token","logout","updateProfile","profileData","updatedUser","value","Provider","ProtectedRoute","_ref2","className","to","replace","App","path","element","position","toastOptions","duration","style","background","color","border","success","iconTheme","primary","secondary"],"sources":["C:/Users/Knight-Server/Desktop/VerseLink-main/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport { Toaster } from 'react-hot-toast';\nimport './App.css';\n\n// Import components\nimport Navbar from './components/Navbar';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport ProfilePage from './pages/ProfilePage';\nimport OrganizationsPage from './pages/OrganizationsPage';\nimport OrganizationDetailPage from './pages/OrganizationDetailPage';\nimport CreateOrganizationPage from './pages/CreateOrganizationPage';\nimport CreateEventPage from './pages/CreateEventPage';\nimport EditEventPage from './pages/EditEventPage';\nimport EventsPage from './pages/EventsPage';\nimport EventDetailPage from './pages/EventDetailPage';\nimport TournamentsPage from './pages/TournamentsPage';\nimport TournamentDetailPage from './pages/TournamentDetailPage';\nimport NotificationsPage from './pages/NotificationsPage';\nimport NotificationPreferencesPage from './pages/NotificationPreferencesPage';\nimport ModerationDashboardPage from './pages/ModerationDashboardPage';\nimport DiscordIntegrationPage from './pages/DiscordIntegrationPage';\nimport DiscordCallbackPage from './pages/DiscordCallbackPage';\nimport AdminSetupPage from './pages/AdminSetupPage';\n\n// Import services\nimport { authService } from './services/authService';\nimport { userService } from './services/userService';\n\n// Auth Context\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Auth Provider Component\nconst AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('auth_token');\n      \n      if (token) {\n        // Set token in axios defaults\n        authService.setAuthToken(token);\n        \n        // Verify token and get user\n        const userData = await authService.checkAuth();\n        setUser(userData.user);\n        setIsAuthenticated(true);\n      }\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      // Clear invalid token\n      localStorage.removeItem('auth_token');\n      authService.clearAuthToken();\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (code, state) => {\n    try {\n      const response = await authService.discordCallback(code, state);\n      \n      // Store token\n      localStorage.setItem('auth_token', response.access_token);\n      authService.setAuthToken(response.access_token);\n      \n      // Set user state\n      setUser(response.user);\n      setIsAuthenticated(true);\n      \n      return response;\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Call backend logout endpoint\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout API call failed:', error);\n      // Continue with client-side logout even if API fails\n    } finally {\n      // Always clear client-side auth state\n      localStorage.removeItem('auth_token');\n      authService.clearAuthToken();\n      setUser(null);\n      setIsAuthenticated(false);\n      \n      // Optional: redirect to home page\n      navigate('/');\n    }\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const updatedUser = await userService.updateProfile(profileData);\n      setUser(updatedUser);\n      return updatedUser;\n    } catch (error) {\n      console.error('Profile update failed:', error);\n      throw error;\n    }\n  };\n\n  const value = {\n    user,\n    isAuthenticated,\n    loading,\n    login,\n    logout,\n    updateProfile,\n    checkAuthStatus\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Protected Route Component\nconst ProtectedRoute = ({ children }) => {\n  const { isAuthenticated, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-dark-950 flex items-center justify-center\">\n        <div className=\"loading-spinner w-12 h-12\"></div>\n      </div>\n    );\n  }\n\n  return isAuthenticated ? children : <Navigate to=\"/login\" replace />;\n};\n\n// Main App Component\nfunction App() {\n  return (\n    <Router>\n      <AuthProvider>\n        <div className=\"min-h-screen bg-dark-950\">\n          {/* Background stars effect */}\n          <div className=\"star-field fixed inset-0 pointer-events-none\"></div>\n          \n          <Navbar />\n          \n          <main className=\"relative z-10\">\n            <Routes>\n              {/* Public routes */}\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"/login\" element={<LoginPage />} />\n              <Route path=\"/auth/discord/callback\" element={<DiscordCallbackPage />} />\n              <Route path=\"/organizations\" element={<OrganizationsPage />} />\n              <Route path=\"/organizations/create\" element={<ProtectedRoute><CreateOrganizationPage /></ProtectedRoute>} />\n              <Route path=\"/organizations/:id\" element={<OrganizationDetailPage />} />\n              <Route path=\"/organizations/:id/events/new\" element={<ProtectedRoute><CreateEventPage /></ProtectedRoute>} />\n              <Route path=\"/events\" element={<EventsPage />} />\n              <Route path=\"/events/:id\" element={<EventDetailPage />} />\n              <Route path=\"/events/:id/edit\" element={<ProtectedRoute><EditEventPage /></ProtectedRoute>} />\n              <Route path=\"/tournaments\" element={<TournamentsPage />} />\n              <Route path=\"/tournaments/:id\" element={<TournamentDetailPage />} />\n              \n              {/* Protected routes */}\n              <Route \n                path=\"/profile\" \n                element={\n                  <ProtectedRoute>\n                    <ProfilePage />\n                  </ProtectedRoute>\n                } \n              />\n              <Route \n                path=\"/notifications\" \n                element={\n                  <ProtectedRoute>\n                    <NotificationsPage />\n                  </ProtectedRoute>\n                } \n              />\n              <Route \n                path=\"/notifications/preferences\" \n                element={\n                  <ProtectedRoute>\n                    <NotificationPreferencesPage />\n                  </ProtectedRoute>\n                } \n              />\n              <Route \n                path=\"/admin/setup\" \n                element={\n                  <ProtectedRoute>\n                    <AdminSetupPage />\n                  </ProtectedRoute>\n                } \n              />\n              <Route \n                path=\"/admin/moderation\" \n                element={\n                  <ProtectedRoute>\n                    <ModerationDashboardPage />\n                  </ProtectedRoute>\n                } \n              />\n              <Route \n                path=\"/discord\" \n                element={\n                  <ProtectedRoute>\n                    <DiscordIntegrationPage />\n                  </ProtectedRoute>\n                } \n              />\n              \n              {/* Catch all redirect */}\n              <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n            </Routes>\n          </main>\n          \n          {/* Toast notifications */}\n          <Toaster\n            position=\"top-right\"\n            toastOptions={{\n              duration: 4000,\n              style: {\n                background: '#1e293b',\n                color: '#f1f5f9',\n                border: '1px solid #475569'\n              },\n              success: {\n                iconTheme: {\n                  primary: '#22c55e',\n                  secondary: '#f1f5f9'\n                }\n              },\n              error: {\n                iconTheme: {\n                  primary: '#ef4444',\n                  secondary: '#f1f5f9'\n                }\n              }\n            }}\n          />\n        </div>\n      </AuthProvider>\n    </Router>\n  );\n}\n\nexport { AuthProvider };\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}