{"ast":null,"code":"import{api}from'./authService';export const eventService={// List events with filters\nlistEvents:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const response=await api.get('/events/',{params});return response.data;}catch(error){console.error('Failed to list events:',error);throw error;}},// Get event details\ngetEvent:async eventId=>{try{const response=await api.get(\"/events/\".concat(eventId));return response.data;}catch(error){console.error('Failed to get event:',error);throw error;}},// Create event for organization\ncreateEvent:async(orgId,eventData)=>{try{const response=await api.post(\"/orgs/\".concat(orgId,\"/events\"),eventData);return response.data;}catch(error){console.error('Failed to create event:',error);throw error;}},// Update event\nupdateEvent:async(eventId,updateData)=>{try{const response=await api.patch(\"/events/\".concat(eventId),updateData);return response.data;}catch(error){console.error('Failed to update event:',error);throw error;}},// Delete event\ndeleteEvent:async eventId=>{try{const response=await api.delete(\"/events/\".concat(eventId));return response.data;}catch(error){console.error('Failed to delete event:',error);throw error;}},// Sign up for event\nsignupForEvent:async(eventId,signupData)=>{try{const response=await api.post(\"/events/\".concat(eventId,\"/signups\"),signupData);return response.data;}catch(error){console.error('Failed to signup for event:',error);throw error;}},// Withdraw from event\nwithdrawFromEvent:async eventId=>{try{const response=await api.delete(\"/events/\".concat(eventId,\"/signups/me\"));return response.data;}catch(error){console.error('Failed to withdraw from event:',error);throw error;}},// Check in for event\ncheckinForEvent:async eventId=>{try{const response=await api.post(\"/events/\".concat(eventId,\"/checkin\"));return response.data;}catch(error){console.error('Failed to checkin for event:',error);throw error;}},// Download event iCal\ndownloadEventICS:async eventId=>{try{const response=await api.get(\"/events/\".concat(eventId,\"/ics\"),{responseType:'blob'});// Create download link\nconst url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement('a');link.href=url;link.setAttribute('download',\"event-\".concat(eventId,\".ics\"));document.body.appendChild(link);link.click();link.remove();window.URL.revokeObjectURL(url);return true;}catch(error){console.error('Failed to download event ICS:',error);throw error;}}};","map":{"version":3,"names":["api","eventService","listEvents","params","arguments","length","undefined","response","get","data","error","console","getEvent","eventId","concat","createEvent","orgId","eventData","post","updateEvent","updateData","patch","deleteEvent","delete","signupForEvent","signupData","withdrawFromEvent","checkinForEvent","downloadEventICS","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL"],"sources":["C:/Users/Knight-Server/Desktop/VerseLink-main/frontend/src/services/eventService.js"],"sourcesContent":["import { api } from './authService';\n\nexport const eventService = {\n  // List events with filters\n  listEvents: async (params = {}) => {\n    try {\n      const response = await api.get('/events/', { params });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to list events:', error);\n      throw error;\n    }\n  },\n\n  // Get event details\n  getEvent: async (eventId) => {\n    try {\n      const response = await api.get(`/events/${eventId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get event:', error);\n      throw error;\n    }\n  },\n\n  // Create event for organization\n  createEvent: async (orgId, eventData) => {\n    try {\n      const response = await api.post(`/orgs/${orgId}/events`, eventData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to create event:', error);\n      throw error;\n    }\n  },\n\n  // Update event\n  updateEvent: async (eventId, updateData) => {\n    try {\n      const response = await api.patch(`/events/${eventId}`, updateData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to update event:', error);\n      throw error;\n    }\n  },\n\n  // Delete event\n  deleteEvent: async (eventId) => {\n    try {\n      const response = await api.delete(`/events/${eventId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to delete event:', error);\n      throw error;\n    }\n  },\n\n  // Sign up for event\n  signupForEvent: async (eventId, signupData) => {\n    try {\n      const response = await api.post(`/events/${eventId}/signups`, signupData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to signup for event:', error);\n      throw error;\n    }\n  },\n\n  // Withdraw from event\n  withdrawFromEvent: async (eventId) => {\n    try {\n      const response = await api.delete(`/events/${eventId}/signups/me`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to withdraw from event:', error);\n      throw error;\n    }\n  },\n\n  // Check in for event\n  checkinForEvent: async (eventId) => {\n    try {\n      const response = await api.post(`/events/${eventId}/checkin`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to checkin for event:', error);\n      throw error;\n    }\n  },\n\n  // Download event iCal\n  downloadEventICS: async (eventId) => {\n    try {\n      const response = await api.get(`/events/${eventId}/ics`, {\n        responseType: 'blob'\n      });\n      \n      // Create download link\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `event-${eventId}.ics`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to download event ICS:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}