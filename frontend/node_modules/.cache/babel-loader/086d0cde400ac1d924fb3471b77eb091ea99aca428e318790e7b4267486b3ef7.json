{"ast":null,"code":"import _objectSpread from\"C:/Users/Knight-Server/Desktop/VerseLink-main/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{api}from'./authService';export const eventService={// List events with filters\nlistEvents:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{const token=localStorage.getItem('auth_token');const response=await api.get('/events/',{params:_objectSpread(_objectSpread({},params),{},{token})});return response.data;}catch(error){console.error('Failed to list events:',error);throw error;}},// Get event details\ngetEvent:async eventId=>{try{const token=localStorage.getItem('auth_token');const response=await api.get(\"/events/\".concat(eventId),{params:{token}});return response.data;}catch(error){console.error('Failed to get event:',error);throw error;}},// Create event for organization\ncreateEvent:async(orgId,eventData)=>{try{const response=await api.post(\"/orgs/\".concat(encodeURIComponent(orgId),\"/events\"),eventData);return response.data;}catch(error){var _error$response;console.error('Failed to create event:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error);throw error;}},// Update event\nupdateEvent:async(eventId,updateData)=>{try{const response=await api.patch(\"/events/\".concat(eventId),updateData);return response.data;}catch(error){console.error('Failed to update event:',error);throw error;}},// Delete event\ndeleteEvent:async eventId=>{try{const response=await api.delete(\"/events/\".concat(eventId));return response.data;}catch(error){console.error('Failed to delete event:',error);throw error;}},// Sign up for event\nsignupForEvent:async(eventId,signupData)=>{try{const response=await api.post(\"/events/\".concat(eventId,\"/signups\"),signupData);return response.data;}catch(error){console.error('Failed to signup for event:',error);throw error;}},// Withdraw from event\nwithdrawFromEvent:async eventId=>{try{const response=await api.delete(\"/events/\".concat(eventId,\"/signups/me\"));return response.data;}catch(error){console.error('Failed to withdraw from event:',error);throw error;}},// Remove a participant from event\nremoveParticipant:async(eventId,userId)=>{try{const response=await api.delete(\"/events/\".concat(eventId,\"/signups/\").concat(userId));return response.data;}catch(error){console.error('Failed to remove participant:',error);throw error;}},// Ban a participant from event\nbanParticipant:async(eventId,userId)=>{try{const response=await api.post(\"/events/\".concat(eventId,\"/signups/\").concat(userId,\"/ban\"));return response.data;}catch(error){console.error('Failed to ban participant:',error);throw error;}},// Unban a participant from event\nunbanParticipant:async(eventId,userId)=>{try{const response=await api.post(\"/events/\".concat(eventId,\"/signups/\").concat(userId,\"/unban\"));return response.data;}catch(error){console.error('Failed to unban participant:',error);throw error;}},// Cancel event\ncancelEvent:async eventId=>{try{const response=await api.post(\"/events/\".concat(eventId,\"/cancel\"));return response.data;}catch(error){console.error('Failed to cancel event:',error);throw error;}},// Check in for event\ncheckinForEvent:async eventId=>{try{const response=await api.post(\"/events/\".concat(eventId,\"/checkin\"));return response.data;}catch(error){console.error('Failed to checkin for event:',error);throw error;}},// Download event iCal\ndownloadEventICS:async eventId=>{try{const response=await api.get(\"/events/\".concat(eventId,\"/ics\"),{responseType:'blob'});// Create download link\nconst url=window.URL.createObjectURL(new Blob([response.data]));const link=document.createElement('a');link.href=url;link.setAttribute('download',\"event-\".concat(eventId,\".ics\"));document.body.appendChild(link);link.click();link.remove();window.URL.revokeObjectURL(url);return true;}catch(error){console.error('Failed to download event ICS:',error);throw error;}}};","map":{"version":3,"names":["api","eventService","listEvents","params","arguments","length","undefined","token","localStorage","getItem","response","get","_objectSpread","data","error","console","getEvent","eventId","concat","createEvent","orgId","eventData","post","encodeURIComponent","_error$response","updateEvent","updateData","patch","deleteEvent","delete","signupForEvent","signupData","withdrawFromEvent","removeParticipant","userId","banParticipant","unbanParticipant","cancelEvent","checkinForEvent","downloadEventICS","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL"],"sources":["C:/Users/Knight-Server/Desktop/VerseLink-main/frontend/src/services/eventService.js"],"sourcesContent":["import { api } from './authService';\n\nexport const eventService = {\n  // List events with filters\n  listEvents: async (params = {}) => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await api.get('/events/', { params: { ...params, token } });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to list events:', error);\n      throw error;\n    }\n  },\n\n  // Get event details\n  getEvent: async (eventId) => {\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await api.get(`/events/${eventId}`, { params: { token } });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get event:', error);\n      throw error;\n    }\n  },\n\n  // Create event for organization\n  createEvent: async (orgId, eventData) => {\n    try {\n      const response = await api.post(`/orgs/${encodeURIComponent(orgId)}/events`, eventData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to create event:', error.response?.data || error);\n      throw error;\n    }\n  },\n\n  // Update event\n  updateEvent: async (eventId, updateData) => {\n    try {\n      const response = await api.patch(`/events/${eventId}`, updateData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to update event:', error);\n      throw error;\n    }\n  },\n\n  // Delete event\n  deleteEvent: async (eventId) => {\n    try {\n      const response = await api.delete(`/events/${eventId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to delete event:', error);\n      throw error;\n    }\n  },\n\n  // Sign up for event\n  signupForEvent: async (eventId, signupData) => {\n    try {\n      const response = await api.post(`/events/${eventId}/signups`, signupData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to signup for event:', error);\n      throw error;\n    }\n  },\n\n  // Withdraw from event\n  withdrawFromEvent: async (eventId) => {\n    try {\n      const response = await api.delete(`/events/${eventId}/signups/me`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to withdraw from event:', error);\n      throw error;\n    }\n  },\n\n  // Remove a participant from event\n  removeParticipant: async (eventId, userId) => {\n    try {\n      const response = await api.delete(`/events/${eventId}/signups/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to remove participant:', error);\n      throw error;\n    }\n  },\n\n  // Ban a participant from event\n  banParticipant: async (eventId, userId) => {\n    try {\n      const response = await api.post(`/events/${eventId}/signups/${userId}/ban`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to ban participant:', error);\n      throw error;\n    }\n  },\n\n  // Unban a participant from event\n  unbanParticipant: async (eventId, userId) => {\n    try {\n      const response = await api.post(`/events/${eventId}/signups/${userId}/unban`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to unban participant:', error);\n      throw error;\n    }\n  },\n\n  // Cancel event\n  cancelEvent: async (eventId) => {\n    try {\n      const response = await api.post(`/events/${eventId}/cancel`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to cancel event:', error);\n      throw error;\n    }\n  },\n\n  // Check in for event\n  checkinForEvent: async (eventId) => {\n    try {\n      const response = await api.post(`/events/${eventId}/checkin`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to checkin for event:', error);\n      throw error;\n    }\n  },\n\n  // Download event iCal\n  downloadEventICS: async (eventId) => {\n    try {\n      const response = await api.get(`/events/${eventId}/ics`, {\n        responseType: 'blob'\n      });\n      \n      // Create download link\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `event-${eventId}.ics`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to download event ICS:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}