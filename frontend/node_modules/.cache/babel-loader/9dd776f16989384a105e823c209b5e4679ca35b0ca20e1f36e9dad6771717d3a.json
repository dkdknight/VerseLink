{"ast":null,"code":"import { api } from './authService';\nexport const eventService = {\n  // List events with filters\n  listEvents: async (params = {}) => {\n    try {\n      const response = await api.get('/events/', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to list events:', error);\n      throw error;\n    }\n  },\n  // Get event details\n  getEvent: async eventId => {\n    try {\n      const response = await api.get(`/events/${eventId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get event:', error);\n      throw error;\n    }\n  },\n  // Create event for organization\n  createEvent: async (orgId, eventData) => {\n    try {\n      const response = await api.post(`/orgs/${orgId}/events`, eventData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to create event:', error);\n      throw error;\n    }\n  },\n  // Update event\n  updateEvent: async (eventId, updateData) => {\n    try {\n      const response = await api.patch(`/events/${eventId}`, updateData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to update event:', error);\n      throw error;\n    }\n  },\n  // Delete event\n  deleteEvent: async eventId => {\n    try {\n      const response = await api.delete(`/events/${eventId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to delete event:', error);\n      throw error;\n    }\n  },\n  // Sign up for event\n  signupForEvent: async (eventId, signupData) => {\n    try {\n      const response = await api.post(`/events/${eventId}/signups`, signupData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to signup for event:', error);\n      throw error;\n    }\n  },\n  // Withdraw from event\n  withdrawFromEvent: async eventId => {\n    try {\n      const response = await api.delete(`/events/${eventId}/signups/me`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to withdraw from event:', error);\n      throw error;\n    }\n  },\n  // Check in for event\n  checkinForEvent: async eventId => {\n    try {\n      const response = await api.post(`/events/${eventId}/checkin`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to checkin for event:', error);\n      throw error;\n    }\n  },\n  // Download event iCal\n  downloadEventICS: async eventId => {\n    try {\n      const response = await api.get(`/events/${eventId}/ics`, {\n        responseType: 'blob'\n      });\n\n      // Create download link\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `event-${eventId}.ics`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      return true;\n    } catch (error) {\n      console.error('Failed to download event ICS:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["api","eventService","listEvents","params","response","get","data","error","console","getEvent","eventId","createEvent","orgId","eventData","post","updateEvent","updateData","patch","deleteEvent","delete","signupForEvent","signupData","withdrawFromEvent","checkinForEvent","downloadEventICS","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL"],"sources":["C:/Users/Knight-Server/Desktop/VerseLink-main/frontend/src/services/eventService.js"],"sourcesContent":["import { api } from './authService';\n\nexport const eventService = {\n  // List events with filters\n  listEvents: async (params = {}) => {\n    try {\n      const response = await api.get('/events/', { params });\n      return response.data;\n    } catch (error) {\n      console.error('Failed to list events:', error);\n      throw error;\n    }\n  },\n\n  // Get event details\n  getEvent: async (eventId) => {\n    try {\n      const response = await api.get(`/events/${eventId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to get event:', error);\n      throw error;\n    }\n  },\n\n  // Create event for organization\n  createEvent: async (orgId, eventData) => {\n    try {\n      const response = await api.post(`/orgs/${orgId}/events`, eventData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to create event:', error);\n      throw error;\n    }\n  },\n\n  // Update event\n  updateEvent: async (eventId, updateData) => {\n    try {\n      const response = await api.patch(`/events/${eventId}`, updateData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to update event:', error);\n      throw error;\n    }\n  },\n\n  // Delete event\n  deleteEvent: async (eventId) => {\n    try {\n      const response = await api.delete(`/events/${eventId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to delete event:', error);\n      throw error;\n    }\n  },\n\n  // Sign up for event\n  signupForEvent: async (eventId, signupData) => {\n    try {\n      const response = await api.post(`/events/${eventId}/signups`, signupData);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to signup for event:', error);\n      throw error;\n    }\n  },\n\n  // Withdraw from event\n  withdrawFromEvent: async (eventId) => {\n    try {\n      const response = await api.delete(`/events/${eventId}/signups/me`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to withdraw from event:', error);\n      throw error;\n    }\n  },\n\n  // Check in for event\n  checkinForEvent: async (eventId) => {\n    try {\n      const response = await api.post(`/events/${eventId}/checkin`);\n      return response.data;\n    } catch (error) {\n      console.error('Failed to checkin for event:', error);\n      throw error;\n    }\n  },\n\n  // Download event iCal\n  downloadEventICS: async (eventId) => {\n    try {\n      const response = await api.get(`/events/${eventId}/ics`, {\n        responseType: 'blob'\n      });\n      \n      // Create download link\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `event-${eventId}.ics`);\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      window.URL.revokeObjectURL(url);\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to download event ICS:', error);\n      throw error;\n    }\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}